# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

"""Utilities for code commenting."""


import jinja2


@jinja2.contextfilter
def block(jinja2_context: jinja2.runtime.Context, value: str) -> str:
  """Returns value, in a block comment.

  If this can't determine how to create a comment for the filetype, returns the
  text unfiltered.

  Args:
    jinja2_context: Context from jinja.
    value: Partially-rendered template text to filter.
  """
  context = jinja2_context.parent['context']

  if not value:
    return ''

  contained_info = context.contained_comment()
  if contained_info is not None:
    start, mid, end = contained_info
    ret = [start + '\n']
    for line in value.splitlines():
      ret.append('{}{}{}\n'.format(mid, ' ' if mid and line else '', line))
    ret.append(end + '\n')
    return ''.join(ret)

  prefix = context.prefixed_comment()
  if prefix is not None:
    return ''.join([
        '{}{}{}\n'.format(prefix, ' ' if prefix and line else '', line)
        for line in value.splitlines()])

  return value
