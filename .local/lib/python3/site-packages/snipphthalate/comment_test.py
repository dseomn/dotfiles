# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

"""Tests for snipphthalate.comment."""


import textwrap
import unittest
from unittest import mock

import jinja2

from snipphthalate import comment
from snipphthalate import context


class CommentTest(unittest.TestCase):

  def setUp(self):
    super().setUp()
    self._context = mock.create_autospec(context.Context)
    self._jinja2_context = mock.create_autospec(jinja2.runtime.Context)
    self._jinja2_context.parent = {'context': self._context}

  def test_block_no_comment(self):
    self._context.contained_comment.return_value = None
    self._context.prefixed_comment.return_value = None
    self.assertEqual('kumquat', comment.block(self._jinja2_context, 'kumquat'))

  def test_block_empty_comment(self):
    self._context.contained_comment.return_value = ('/*', ' *', ' */')
    self._context.prefixed_comment.return_value = '#'
    self.assertEqual('', comment.block(self._jinja2_context, ''))

  def test_block_contained_comment(self):
    self._context.contained_comment.return_value = ('/*', ' *', ' */')
    self.assertEqual(
        textwrap.dedent("""\
            /*
             * a
             *
             * b
             */
        """),
        comment.block(self._jinja2_context, 'a\n\nb\n'))

  def test_block_prefixed_comment(self):
    self._context.contained_comment.return_value = None
    self._context.prefixed_comment.return_value = '#'
    self.assertEqual(
        textwrap.dedent("""\
             # a
             #
             # b
        """),
        comment.block(self._jinja2_context, 'a\n\nb\n'))


if __name__ == '__main__':
  unittest.main()
