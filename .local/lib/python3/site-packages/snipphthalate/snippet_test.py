# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

"""Tests for snipphthalate.snippet."""


import unittest
from unittest import mock

import jinja2

from snipphthalate import context
from snipphthalate import snippet


class Jinja2SnippetTest(unittest.TestCase):

  def setUp(self):
    super().setUp()
    self._context = mock.create_autospec(context.Context)

  def test_system_context(self):
    self._context.__str__.return_value = 'kumquat'
    self.assertEqual(
        'kumquat',
        snippet.Jinja2Snippet(
            jinja2.Template('{{context}}')).render(self._context))

  def test_render(self):
    for subtest, path, template, default_context, expected in (
        ('no_vars', None, 'kumquat', None, 'kumquat'),
        ('default_var', None, '{{foo}}', {'foo': 'bar'}, 'bar'),
        ('system_var', 'quux', '{{context.path()}}', None, 'quux'),
    ):
      with self.subTest(subtest):
        self._context.path.return_value = path
        actual = snippet.Jinja2Snippet(
            jinja2.Template(template), default_context).render(self._context)
        self.assertEqual(expected, actual)

  def test_render_error(self):
    with self.assertRaises(snippet.RenderError):
      snippet.Jinja2Snippet(jinja2.Template('{{foo.bar}}')).render(
          self._context)


if __name__ == '__main__':
  unittest.main()
