#!/bin/bash

# Copyright 2020 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


pecho() { printf '%s\n' "$*"; }


key=$1; shift
values=("$@")
if [[ -z "$key" ]] || [[ ${#values[@]} -lt 1 ]]; then
  cat >&2 <<EOF
Usage: $0 KEY VALUE...

If the specified dconf key has a value among the specified values, it will be
set to the next value in order (wrapping around at the end). Otherwise, it will
be set to the first value.
EOF
  exit 1
fi


next_value() {
  local current_value
  current_value=$(dconf read "$key") || {
    # Error reading key.
    pecho "${values[0]}"
    return
  }
  local i
  for ((i=0; i < ${#values[@]}; i++)); do
    if [[ "${values[$i]}" = "$current_value" ]]; then
      local next_index=$(( (i + 1) % ${#values[@]} ))
      pecho "${values[${next_index}]}"
      return
    fi
  done
  # The current value isn't in values.
  pecho "${values[0]}"
}


dconf write "$key" "$(next_value)"
