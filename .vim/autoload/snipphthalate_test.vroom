" Copyright 2019 Google LLC
"
" Licensed under the Apache License, Version 2.0 (the "License");
" you may not use this file except in compliance with the License.
" You may obtain a copy of the License at
"
"     https://www.apache.org/licenses/LICENSE-2.0
"
" Unless required by applicable law or agreed to in writing, software
" distributed under the License is distributed on an "AS IS" BASIS,
" WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
" See the License for the specific language governing permissions and
" limitations under the License.



Setup python.

  :let g:py3_site_dir = $VROOMDIR . '/../../.local/lib/python3/site-packages'
  :py3 import sys
  :py3 sys.path += [vim.vars['py3_site_dir'].decode()]

Setup snipphthalate.

  :set runtimepath+=$VROOMDIR/..
  :let g:config_dir = tempname()
  :call mkdir(g:config_dir . '/snippets', 'p')
  :let g:snipphthalate_config_dirs = [g:config_dir]

Create some snippets.

  :call writefile(['foo'], g:config_dir . '/snippets/foo.jinja2')
  :call writefile(['bar1', 'bar2'], g:config_dir . '/snippets/bar.jinja2')



Test snipphthalate#InsertSnippet, inline insert into blank line.

  :call snipphthalate#InsertSnippet('foo')
  & foo
  @end



Test snipphthalate#InsertSnippet, inline insert into the middle of a line.

  > iABC<ESC>h
  :call snipphthalate#InsertSnippet('foo')
  & AfooBC
  @end



Test snipphthalate#InsertSnippet, inline insert at the end of the line.

  > iABC<C-\><C-O>:call snipphthalate#InsertSnippet('foo')<CR><ESC>
  & ABCfoo
  @end



Test snipphthalate#InsertSnippet, block insert.

  > iABC<ESC>h
  :call snipphthalate#InsertSnippet('bar')
  & bar1
  & bar2
  & ABC
  @end



Test snipphthalate#CompleteTags with no prefix.

  :echomsg string(snipphthalate#CompleteTags('', '', 0))
  ~ ['bar', 'foo']



Test snipphthalate#CompleteTags with a prefix.

  :echomsg string(snipphthalate#CompleteTags('f', '', 0))
  ~ ['foo']



Test snipphthalate#CompleteTags with a prefix that matches nothing.

  :echomsg string(snipphthalate#CompleteTags('q', '', 0))
  ~ []
